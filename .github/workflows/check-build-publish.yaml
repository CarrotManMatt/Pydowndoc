name: Lint, Type-Check, Test, Build and Publish Package

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]

jobs:
    upload-downdoc-binaries:
        uses: ./.github/workflows/upload-downdoc-binaries.yaml

    convert-readme:
        needs: [upload-downdoc-binaries]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Download Linux x86-64 downdoc Binary
              uses: actions/download-artifact@v4
              with:
                name: downdoc-linux-x86-64-binary
                merge-multiple: true
                path: downloads/

            - name: Make Linux x86-64 downdoc Binary Executable
              run: chmod +x downloads/downdoc-linux-x64

            - name: Convert Project README
              run: downloads/downdoc-linux-x64 README.adoc

            - name: Save Converted README
              uses: actions/upload-artifact@v4
              with:
                name: converted-readme
                path: README.md

    build:
        needs: [convert-readme, upload-downdoc-binaries]
        runs-on: ubuntu-latest
        container: {image: quay.io/pypa/manylinux_2_34_x86_64}

        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Download Converted README
              uses: actions/download-artifact@v4
              with:
                name: converted-readme

            - name: Download downdoc Binaries
              uses: actions/download-artifact@v4
              with:
                pattern: downdoc-*-binary
                merge-multiple: true
                path: downloads/

            - name: Install Build Dependencies From Lock File
              run: uv sync --no-python-downloads --only-group build --frozen

            - name: Build Package
              run: uv run hatch build -t custom

            - name: Repair Linux Packages
              run: uv run auditwheel repair $(find dist/ -type f -iname "*linux*.whl")

            - name: Save Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: built-Pydowndoc-package
                path: dist/

    test-publish:
        needs: [build]
        runs-on: ubuntu-latest
        environment: test-publish
        permissions:
            id-token: write

        if: github.ref_type != 'tag'

        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                enable-cache: true
                cache-dependency-glob: uv.lock

            - name: Download Build Artifacts
              uses: actions/download-artifact@v4
              with:
                name: built-Pydowndoc-package
                path: dist/

            - name: Publish to Test-PyPI
              run: uv publish --publish-url https://test.pypi.org/legacy/
