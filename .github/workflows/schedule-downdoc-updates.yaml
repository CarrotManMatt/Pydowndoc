name: Schedule downdoc Updates

on:
    schedule:
        - cron: "0 18 * * 1"
    workflow_dispatch:

jobs:
    check-new-upstream-version:
        runs-on: ubuntu-latest
        outputs:
            upstream_version: ${{steps.output-upstream-version.outputs.upstream_version}}
            has_changed: ${{steps.compare-versions.outputs.has_changed}}

        steps:
            - uses: actions/setup-node@v4
              with:
                node-version: 18

            - id: output-upstream-version
              run: echo "upstream_version=$(npx downdoc -v)\n" >> $GITHUB_OUTPUT

            - name: Install uv
              uses: astral-sh/setup-uv@v3

            - id: compare-versions
              run: |
                if { ${{steps.output-upstream-version.outputs.upstream_version}}; uvx --from Pydowndoc downdoc -v; } | sort --version-sort --reverse --check; then
                    echo "has_changed=true\n" >> $GITHUB_OUTPUT
                else
                    echo "has_changed=false\n" >> $GITHUB_OUTPUT
                fi

    create-new-tag:
        runs-on: ubuntu-latest
        needs: [check-new-upstream-version]
        if: needs.check-new-upstream-version.outputs.has_changed == 'true' || github.event_name ==
            'workflow_dispatch'

        steps:
            - uses: dawidd6/action-send-mail@v4
              with:
                server_address: smtppro.zoho.eu
                server_port: 587
                secure: true
                username: ${{secrets.EMAIL_NOTIFICATION_USERNAME}}
                password: ${{secrets.EMAIL_NOTIFICATION_PASSWORD}}
                subject: "Pydowndoc: New upstream version ${{needs.check-new-upstream-version.outputs.upstream_version}}"
                to: ${{secrets.EMAIL_NOTIFICATION_RECIPIENTS}}
                from: Pydowndoc Development Notifier
                body: "The upstream project \"downdoc\" has released a new version: ${{needs.check-new-upstream-version.outputs.upstream_version}}.\nCreate
                    & push a new tag for your project ${{github.repository}} to update the wrapped
                    downdoc version."
